Terminals which are not used

   OR


State 10 conflicts: 1 reduce/reduce
State 19 conflicts: 11 shift/reduce
State 47 conflicts: 1 shift/reduce
State 57 conflicts: 12 shift/reduce
State 59 conflicts: 11 shift/reduce
State 60 conflicts: 11 shift/reduce
State 61 conflicts: 11 shift/reduce
State 62 conflicts: 11 shift/reduce
State 63 conflicts: 11 shift/reduce
State 64 conflicts: 11 shift/reduce
State 65 conflicts: 11 shift/reduce
State 66 conflicts: 11 shift/reduce
State 67 conflicts: 11 shift/reduce
State 68 conflicts: 11 shift/reduce
State 69 conflicts: 11 shift/reduce
State 72 conflicts: 11 shift/reduce
State 81 conflicts: 12 shift/reduce
State 82 conflicts: 11 shift/reduce
State 103 conflicts: 12 shift/reduce
State 105 conflicts: 12 shift/reduce
State 117 conflicts: 11 shift/reduce
State 128 conflicts: 11 shift/reduce
State 132 conflicts: 12 shift/reduce
State 142 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp
    2        | decs

    3 exp: NIL
    4    | INTEGER
    5    | STRING
    6    | typeid LBRACKET exp RBRACKET OF exp
    7    | typeid LBRACE typeid_fac
    8    | NEW typeid
    9    | lvalue
   10    | ID LPARENTHESIS funcall_fac
   11    | lvalue DOT ID LPARENTHESIS methodcall_fac
   12    | MINUS exp
   13    | exp AND exp
   14    | exp LTE exp
   15    | exp GTE exp
   16    | exp EQ exp
   17    | exp NEQ exp
   18    | exp GT exp
   19    | exp LT exp
   20    | exp PLUS exp
   21    | exp MINUS exp
   22    | exp TIMES exp
   23    | exp DIVIDE exp
   24    | LPARENTHESIS exp RPARENTHESIS
   25    | lvalue ASSIGN exp
   26    | IF exp THEN exp if_opc
   27    | WHILE exp DO exp
   28    | FOR ID ASSIGN exp TO exp DO exp
   29    | BREAK
   30    | LET decs IN exps END

   31 typeid_fac: RBRACE
   32           | ID EQ exp typeid_aux RBRACE

   33 typeid_aux: /* empty */
   34           | COMMA ID EQ exp typeid_aux

   35 methodcall_fac: RPARENTHESIS
   36               | exp methodcall_aux

   37 methodcall_aux: /* empty */
   38               | COMMA exp methodcall_aux

   39 funcall_fac: RPARENTHESIS
   40            | exp funcall_aux

   41 funcall_aux: /* empty */
   42            | COMMA exp funcall_aux

   43 if_opc: /* empty */
   44       | ELSE exp

   45 lvalue: ID
   46       | lvalue DOT ID
   47       | lvalue LBRACKET exp RBRACKET

   48 exps: /* empty */
   49     | exp exps_list

   50 exps_list: /* empty */
   51          | SEMICOLON exp

   52 decs: /* empty */
   53     | decs dec

   54 dec: tydeclist
   55    | vardec
   56    | FUNCTION ID LPARENTHESIS tyfields RPARENTHESIS dec_factor

   57 dec_factor: COLON typeid EQ exp
   58           | EQ exp

   59 tydeclist: tydec
   60          | tydec tydeclist

   61 tydec: TYPE ID EQ ty

   62 vardec: VAR ID vardec_opc

   63 vardec_opc: COLON typeid ASSIGN exp
   64           | ASSIGN exp

   65 ty: typeid
   66   | LBRACKET tyfields RBRACKET
   67   | ARRAY OF typeid

   68 tyfields: ID COLON typeid tyfields_factor
   69         | /* empty */

   70 tyfields_factor: tyfields_aux
   71                | /* empty */

   72 tyfields_aux: COMMA ID COLON typeid tyfields_aux_factor

   73 tyfields_aux_factor: tyfields_aux
   74                    | /* empty */

   75 typeid: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 34 38 42 72
SEMICOLON (259) 51
LPARENTHESIS (260) 10 11 24 56
RPARENTHESIS (261) 24 35 39 56
LBRACKET (262) 6 47 66
RBRACKET (263) 6 47 66
LBRACE (264) 7
RBRACE (265) 31 32
DOT (266) 11 46
PLUS (267) 20
MINUS (268) 12 21
TIMES (269) 22
DIVIDE (270) 23
LTE (271) 14
GTE (272) 15
EQ (273) 16 32 34 57 58 61
NEQ (274) 17
GT (275) 18
LT (276) 19
AND (277) 13
OR (278)
ASSIGN (279) 25 28 63 64
ARRAY (280) 67
IF (281) 26
THEN (282) 26
ELSE (283) 44
WHILE (284) 27
FOR (285) 28
TO (286) 28
DO (287) 27 28
LET (288) 30
IN (289) 30
END (290) 30
OF (291) 6 67
BREAK (292) 29
NIL (293) 3
FUNCTION (294) 56
VAR (295) 62
TYPE (296) 61
NEW (297) 8
ID (298) 10 11 28 32 34 45 46 56 61 62 68 72 75
INTEGER (299) 4
COLON (300) 57 63 68 72
STRING (301) 5


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
exp (49)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30, on right: 1 6 12 13 14 15 16 17 18 19 20
    21 22 23 24 25 26 27 28 32 34 36 38 40 42 44 47 49 51 57 58 63
    64
typeid_fac (50)
    on left: 31 32, on right: 7
typeid_aux (51)
    on left: 33 34, on right: 32 34
methodcall_fac (52)
    on left: 35 36, on right: 11
methodcall_aux (53)
    on left: 37 38, on right: 36 38
funcall_fac (54)
    on left: 39 40, on right: 10
funcall_aux (55)
    on left: 41 42, on right: 40 42
if_opc (56)
    on left: 43 44, on right: 26
lvalue (57)
    on left: 45 46 47, on right: 9 11 25 46 47
exps (58)
    on left: 48 49, on right: 30
exps_list (59)
    on left: 50 51, on right: 49
decs (60)
    on left: 52 53, on right: 2 30 53
dec (61)
    on left: 54 55 56, on right: 53
dec_factor (62)
    on left: 57 58, on right: 56
tydeclist (63)
    on left: 59 60, on right: 54 60
tydec (64)
    on left: 61, on right: 59 60
vardec (65)
    on left: 62, on right: 55
vardec_opc (66)
    on left: 63 64, on right: 62
ty (67)
    on left: 65 66 67, on right: 61
tyfields (68)
    on left: 68 69, on right: 56 66
tyfields_factor (69)
    on left: 70 71, on right: 68
tyfields_aux (70)
    on left: 72, on right: 70 73
tyfields_aux_factor (71)
    on left: 73 74, on right: 72
typeid (72)
    on left: 75, on right: 6 7 8 57 63 65 67 68 72


state 0

    0 $accept: . program $end

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    $default  reduce using rule 52 (decs)

    program  go to state 13
    exp      go to state 14
    lvalue   go to state 15
    decs     go to state 16
    typeid   go to state 17


state 1

   24 exp: LPARENTHESIS . exp RPARENTHESIS

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 18
    lvalue  go to state 15
    typeid  go to state 17


state 2

   12 exp: MINUS . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 19
    lvalue  go to state 15
    typeid  go to state 17


state 3

   26 exp: IF . exp THEN exp if_opc

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 20
    lvalue  go to state 15
    typeid  go to state 17


state 4

   27 exp: WHILE . exp DO exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 21
    lvalue  go to state 15
    typeid  go to state 17


state 5

   28 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 22


state 6

   30 exp: LET . decs IN exps END

    $default  reduce using rule 52 (decs)

    decs  go to state 23


state 7

   29 exp: BREAK .

    $default  reduce using rule 29 (exp)


state 8

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 9

    8 exp: NEW . typeid

    ID  shift, and go to state 24

    typeid  go to state 25


state 10

   10 exp: ID . LPARENTHESIS funcall_fac
   45 lvalue: ID .
   75 typeid: ID .

    LPARENTHESIS  shift, and go to state 26

    LBRACKET  reduce using rule 45 (lvalue)
    LBRACKET  [reduce using rule 75 (typeid)]
    LBRACE    reduce using rule 75 (typeid)
    $default  reduce using rule 45 (lvalue)


state 11

    4 exp: INTEGER .

    $default  reduce using rule 4 (exp)


state 12

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 13

    0 $accept: program . $end

    $end  shift, and go to state 27


state 14

    1 program: exp .
   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 1 (program)


state 15

    9 exp: lvalue .
   11    | lvalue . DOT ID LPARENTHESIS methodcall_fac
   25    | lvalue . ASSIGN exp
   46 lvalue: lvalue . DOT ID
   47       | lvalue . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 39
    DOT       shift, and go to state 40
    ASSIGN    shift, and go to state 41

    $default  reduce using rule 9 (exp)


state 16

    2 program: decs .
   53 decs: decs . dec

    FUNCTION  shift, and go to state 42
    VAR       shift, and go to state 43
    TYPE      shift, and go to state 44

    $default  reduce using rule 2 (program)

    dec        go to state 45
    tydeclist  go to state 46
    tydec      go to state 47
    vardec     go to state 48


state 17

    6 exp: typeid . LBRACKET exp RBRACKET OF exp
    7    | typeid . LBRACE typeid_fac

    LBRACKET  shift, and go to state 49
    LBRACE    shift, and go to state 50


state 18

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   24    | LPARENTHESIS exp . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 51
    PLUS          shift, and go to state 28
    MINUS         shift, and go to state 29
    TIMES         shift, and go to state 30
    DIVIDE        shift, and go to state 31
    LTE           shift, and go to state 32
    GTE           shift, and go to state 33
    EQ            shift, and go to state 34
    NEQ           shift, and go to state 35
    GT            shift, and go to state 36
    LT            shift, and go to state 37
    AND           shift, and go to state 38


state 19

   12 exp: MINUS exp .
   13    | exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 12 (exp)]
    MINUS     [reduce using rule 12 (exp)]
    TIMES     [reduce using rule 12 (exp)]
    DIVIDE    [reduce using rule 12 (exp)]
    LTE       [reduce using rule 12 (exp)]
    GTE       [reduce using rule 12 (exp)]
    EQ        [reduce using rule 12 (exp)]
    NEQ       [reduce using rule 12 (exp)]
    GT        [reduce using rule 12 (exp)]
    LT        [reduce using rule 12 (exp)]
    AND       [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


state 20

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   26    | IF exp . THEN exp if_opc

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38
    THEN    shift, and go to state 52


state 21

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   27    | WHILE exp . DO exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38
    DO      shift, and go to state 53


state 22

   28 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 54


state 23

   30 exp: LET decs . IN exps END
   53 decs: decs . dec

    IN        shift, and go to state 55
    FUNCTION  shift, and go to state 42
    VAR       shift, and go to state 43
    TYPE      shift, and go to state 44

    dec        go to state 45
    tydeclist  go to state 46
    tydec      go to state 47
    vardec     go to state 48


state 24

   75 typeid: ID .

    $default  reduce using rule 75 (typeid)


state 25

    8 exp: NEW typeid .

    $default  reduce using rule 8 (exp)


state 26

   10 exp: ID LPARENTHESIS . funcall_fac

    LPARENTHESIS  shift, and go to state 1
    RPARENTHESIS  shift, and go to state 56
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp          go to state 57
    funcall_fac  go to state 58
    lvalue       go to state 15
    typeid       go to state 17


state 27

    0 $accept: program $end .

    $default  accept


state 28

   20 exp: exp PLUS . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 59
    lvalue  go to state 15
    typeid  go to state 17


state 29

   21 exp: exp MINUS . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 60
    lvalue  go to state 15
    typeid  go to state 17


state 30

   22 exp: exp TIMES . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 61
    lvalue  go to state 15
    typeid  go to state 17


state 31

   23 exp: exp DIVIDE . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 62
    lvalue  go to state 15
    typeid  go to state 17


state 32

   14 exp: exp LTE . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 63
    lvalue  go to state 15
    typeid  go to state 17


state 33

   15 exp: exp GTE . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 64
    lvalue  go to state 15
    typeid  go to state 17


state 34

   16 exp: exp EQ . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 65
    lvalue  go to state 15
    typeid  go to state 17


state 35

   17 exp: exp NEQ . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 66
    lvalue  go to state 15
    typeid  go to state 17


state 36

   18 exp: exp GT . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 67
    lvalue  go to state 15
    typeid  go to state 17


state 37

   19 exp: exp LT . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 68
    lvalue  go to state 15
    typeid  go to state 17


state 38

   13 exp: exp AND . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 69
    lvalue  go to state 15
    typeid  go to state 17


state 39

   47 lvalue: lvalue LBRACKET . exp RBRACKET

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 70
    lvalue  go to state 15
    typeid  go to state 17


state 40

   11 exp: lvalue DOT . ID LPARENTHESIS methodcall_fac
   46 lvalue: lvalue DOT . ID

    ID  shift, and go to state 71


state 41

   25 exp: lvalue ASSIGN . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 72
    lvalue  go to state 15
    typeid  go to state 17


state 42

   56 dec: FUNCTION . ID LPARENTHESIS tyfields RPARENTHESIS dec_factor

    ID  shift, and go to state 73


state 43

   62 vardec: VAR . ID vardec_opc

    ID  shift, and go to state 74


state 44

   61 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 75


state 45

   53 decs: decs dec .

    $default  reduce using rule 53 (decs)


state 46

   54 dec: tydeclist .

    $default  reduce using rule 54 (dec)


state 47

   59 tydeclist: tydec .
   60          | tydec . tydeclist

    TYPE  shift, and go to state 44

    TYPE      [reduce using rule 59 (tydeclist)]
    $default  reduce using rule 59 (tydeclist)

    tydeclist  go to state 76
    tydec      go to state 47


state 48

   55 dec: vardec .

    $default  reduce using rule 55 (dec)


state 49

    6 exp: typeid LBRACKET . exp RBRACKET OF exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 77
    lvalue  go to state 15
    typeid  go to state 17


state 50

    7 exp: typeid LBRACE . typeid_fac

    RBRACE  shift, and go to state 78
    ID      shift, and go to state 79

    typeid_fac  go to state 80


state 51

   24 exp: LPARENTHESIS exp RPARENTHESIS .

    $default  reduce using rule 24 (exp)


state 52

   26 exp: IF exp THEN . exp if_opc

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 81
    lvalue  go to state 15
    typeid  go to state 17


state 53

   27 exp: WHILE exp DO . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 82
    lvalue  go to state 15
    typeid  go to state 17


state 54

   28 exp: FOR ID ASSIGN . exp TO exp DO exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 83
    lvalue  go to state 15
    typeid  go to state 17


state 55

   30 exp: LET decs IN . exps END

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    $default  reduce using rule 48 (exps)

    exp     go to state 84
    lvalue  go to state 15
    exps    go to state 85
    typeid  go to state 17


state 56

   39 funcall_fac: RPARENTHESIS .

    $default  reduce using rule 39 (funcall_fac)


state 57

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   40 funcall_fac: exp . funcall_aux

    COMMA   shift, and go to state 86
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    COMMA     [reduce using rule 41 (funcall_aux)]
    PLUS      [reduce using rule 41 (funcall_aux)]
    MINUS     [reduce using rule 41 (funcall_aux)]
    TIMES     [reduce using rule 41 (funcall_aux)]
    DIVIDE    [reduce using rule 41 (funcall_aux)]
    LTE       [reduce using rule 41 (funcall_aux)]
    GTE       [reduce using rule 41 (funcall_aux)]
    EQ        [reduce using rule 41 (funcall_aux)]
    NEQ       [reduce using rule 41 (funcall_aux)]
    GT        [reduce using rule 41 (funcall_aux)]
    LT        [reduce using rule 41 (funcall_aux)]
    AND       [reduce using rule 41 (funcall_aux)]
    $default  reduce using rule 41 (funcall_aux)

    funcall_aux  go to state 87


state 58

   10 exp: ID LPARENTHESIS funcall_fac .

    $default  reduce using rule 10 (exp)


state 59

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   20    | exp PLUS exp .
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 20 (exp)]
    MINUS     [reduce using rule 20 (exp)]
    TIMES     [reduce using rule 20 (exp)]
    DIVIDE    [reduce using rule 20 (exp)]
    LTE       [reduce using rule 20 (exp)]
    GTE       [reduce using rule 20 (exp)]
    EQ        [reduce using rule 20 (exp)]
    NEQ       [reduce using rule 20 (exp)]
    GT        [reduce using rule 20 (exp)]
    LT        [reduce using rule 20 (exp)]
    AND       [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


state 60

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   21    | exp MINUS exp .
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 21 (exp)]
    MINUS     [reduce using rule 21 (exp)]
    TIMES     [reduce using rule 21 (exp)]
    DIVIDE    [reduce using rule 21 (exp)]
    LTE       [reduce using rule 21 (exp)]
    GTE       [reduce using rule 21 (exp)]
    EQ        [reduce using rule 21 (exp)]
    NEQ       [reduce using rule 21 (exp)]
    GT        [reduce using rule 21 (exp)]
    LT        [reduce using rule 21 (exp)]
    AND       [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


state 61

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   22    | exp TIMES exp .
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    LTE       [reduce using rule 22 (exp)]
    GTE       [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


state 62

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   23    | exp DIVIDE exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    LTE       [reduce using rule 23 (exp)]
    GTE       [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


state 63

   13 exp: exp . AND exp
   14    | exp . LTE exp
   14    | exp LTE exp .
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 14 (exp)]
    MINUS     [reduce using rule 14 (exp)]
    TIMES     [reduce using rule 14 (exp)]
    DIVIDE    [reduce using rule 14 (exp)]
    LTE       [reduce using rule 14 (exp)]
    GTE       [reduce using rule 14 (exp)]
    EQ        [reduce using rule 14 (exp)]
    NEQ       [reduce using rule 14 (exp)]
    GT        [reduce using rule 14 (exp)]
    LT        [reduce using rule 14 (exp)]
    AND       [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)


state 64

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   15    | exp GTE exp .
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 15 (exp)]
    MINUS     [reduce using rule 15 (exp)]
    TIMES     [reduce using rule 15 (exp)]
    DIVIDE    [reduce using rule 15 (exp)]
    LTE       [reduce using rule 15 (exp)]
    GTE       [reduce using rule 15 (exp)]
    EQ        [reduce using rule 15 (exp)]
    NEQ       [reduce using rule 15 (exp)]
    GT        [reduce using rule 15 (exp)]
    LT        [reduce using rule 15 (exp)]
    AND       [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


state 65

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   16    | exp EQ exp .
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 16 (exp)]
    MINUS     [reduce using rule 16 (exp)]
    TIMES     [reduce using rule 16 (exp)]
    DIVIDE    [reduce using rule 16 (exp)]
    LTE       [reduce using rule 16 (exp)]
    GTE       [reduce using rule 16 (exp)]
    EQ        [reduce using rule 16 (exp)]
    NEQ       [reduce using rule 16 (exp)]
    GT        [reduce using rule 16 (exp)]
    LT        [reduce using rule 16 (exp)]
    AND       [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


state 66

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   17    | exp NEQ exp .
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 17 (exp)]
    MINUS     [reduce using rule 17 (exp)]
    TIMES     [reduce using rule 17 (exp)]
    DIVIDE    [reduce using rule 17 (exp)]
    LTE       [reduce using rule 17 (exp)]
    GTE       [reduce using rule 17 (exp)]
    EQ        [reduce using rule 17 (exp)]
    NEQ       [reduce using rule 17 (exp)]
    GT        [reduce using rule 17 (exp)]
    LT        [reduce using rule 17 (exp)]
    AND       [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


state 67

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   18    | exp GT exp .
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    LTE       [reduce using rule 18 (exp)]
    GTE       [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


state 68

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   19    | exp LT exp .
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 19 (exp)]
    MINUS     [reduce using rule 19 (exp)]
    TIMES     [reduce using rule 19 (exp)]
    DIVIDE    [reduce using rule 19 (exp)]
    LTE       [reduce using rule 19 (exp)]
    GTE       [reduce using rule 19 (exp)]
    EQ        [reduce using rule 19 (exp)]
    NEQ       [reduce using rule 19 (exp)]
    GT        [reduce using rule 19 (exp)]
    LT        [reduce using rule 19 (exp)]
    AND       [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


state 69

   13 exp: exp . AND exp
   13    | exp AND exp .
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 13 (exp)]
    MINUS     [reduce using rule 13 (exp)]
    TIMES     [reduce using rule 13 (exp)]
    DIVIDE    [reduce using rule 13 (exp)]
    LTE       [reduce using rule 13 (exp)]
    GTE       [reduce using rule 13 (exp)]
    EQ        [reduce using rule 13 (exp)]
    NEQ       [reduce using rule 13 (exp)]
    GT        [reduce using rule 13 (exp)]
    LT        [reduce using rule 13 (exp)]
    AND       [reduce using rule 13 (exp)]
    $default  reduce using rule 13 (exp)


state 70

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   47 lvalue: lvalue LBRACKET exp . RBRACKET

    RBRACKET  shift, and go to state 88
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    TIMES     shift, and go to state 30
    DIVIDE    shift, and go to state 31
    LTE       shift, and go to state 32
    GTE       shift, and go to state 33
    EQ        shift, and go to state 34
    NEQ       shift, and go to state 35
    GT        shift, and go to state 36
    LT        shift, and go to state 37
    AND       shift, and go to state 38


state 71

   11 exp: lvalue DOT ID . LPARENTHESIS methodcall_fac
   46 lvalue: lvalue DOT ID .

    LPARENTHESIS  shift, and go to state 89

    $default  reduce using rule 46 (lvalue)


state 72

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   25    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    LTE       [reduce using rule 25 (exp)]
    GTE       [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


state 73

   56 dec: FUNCTION ID . LPARENTHESIS tyfields RPARENTHESIS dec_factor

    LPARENTHESIS  shift, and go to state 90


state 74

   62 vardec: VAR ID . vardec_opc

    ASSIGN  shift, and go to state 91
    COLON   shift, and go to state 92

    vardec_opc  go to state 93


state 75

   61 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 94


state 76

   60 tydeclist: tydec tydeclist .

    $default  reduce using rule 60 (tydeclist)


state 77

    6 exp: typeid LBRACKET exp . RBRACKET OF exp
   13    | exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    RBRACKET  shift, and go to state 95
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    TIMES     shift, and go to state 30
    DIVIDE    shift, and go to state 31
    LTE       shift, and go to state 32
    GTE       shift, and go to state 33
    EQ        shift, and go to state 34
    NEQ       shift, and go to state 35
    GT        shift, and go to state 36
    LT        shift, and go to state 37
    AND       shift, and go to state 38


state 78

   31 typeid_fac: RBRACE .

    $default  reduce using rule 31 (typeid_fac)


state 79

   32 typeid_fac: ID . EQ exp typeid_aux RBRACE

    EQ  shift, and go to state 96


state 80

    7 exp: typeid LBRACE typeid_fac .

    $default  reduce using rule 7 (exp)


state 81

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   26    | IF exp THEN exp . if_opc

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38
    ELSE    shift, and go to state 97

    PLUS      [reduce using rule 43 (if_opc)]
    MINUS     [reduce using rule 43 (if_opc)]
    TIMES     [reduce using rule 43 (if_opc)]
    DIVIDE    [reduce using rule 43 (if_opc)]
    LTE       [reduce using rule 43 (if_opc)]
    GTE       [reduce using rule 43 (if_opc)]
    EQ        [reduce using rule 43 (if_opc)]
    NEQ       [reduce using rule 43 (if_opc)]
    GT        [reduce using rule 43 (if_opc)]
    LT        [reduce using rule 43 (if_opc)]
    AND       [reduce using rule 43 (if_opc)]
    ELSE      [reduce using rule 43 (if_opc)]
    $default  reduce using rule 43 (if_opc)

    if_opc  go to state 98


state 82

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   27    | WHILE exp DO exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    LTE       [reduce using rule 27 (exp)]
    GTE       [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 83

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   28    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38
    TO      shift, and go to state 99


state 84

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   49 exps: exp . exps_list

    SEMICOLON  shift, and go to state 100
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    TIMES      shift, and go to state 30
    DIVIDE     shift, and go to state 31
    LTE        shift, and go to state 32
    GTE        shift, and go to state 33
    EQ         shift, and go to state 34
    NEQ        shift, and go to state 35
    GT         shift, and go to state 36
    LT         shift, and go to state 37
    AND        shift, and go to state 38

    $default  reduce using rule 50 (exps_list)

    exps_list  go to state 101


state 85

   30 exp: LET decs IN exps . END

    END  shift, and go to state 102


state 86

   42 funcall_aux: COMMA . exp funcall_aux

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 103
    lvalue  go to state 15
    typeid  go to state 17


state 87

   40 funcall_fac: exp funcall_aux .

    $default  reduce using rule 40 (funcall_fac)


state 88

   47 lvalue: lvalue LBRACKET exp RBRACKET .

    $default  reduce using rule 47 (lvalue)


state 89

   11 exp: lvalue DOT ID LPARENTHESIS . methodcall_fac

    LPARENTHESIS  shift, and go to state 1
    RPARENTHESIS  shift, and go to state 104
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp             go to state 105
    methodcall_fac  go to state 106
    lvalue          go to state 15
    typeid          go to state 17


state 90

   56 dec: FUNCTION ID LPARENTHESIS . tyfields RPARENTHESIS dec_factor

    ID  shift, and go to state 107

    $default  reduce using rule 69 (tyfields)

    tyfields  go to state 108


state 91

   64 vardec_opc: ASSIGN . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 109
    lvalue  go to state 15
    typeid  go to state 17


state 92

   63 vardec_opc: COLON . typeid ASSIGN exp

    ID  shift, and go to state 24

    typeid  go to state 110


state 93

   62 vardec: VAR ID vardec_opc .

    $default  reduce using rule 62 (vardec)


state 94

   61 tydec: TYPE ID EQ . ty

    LBRACKET  shift, and go to state 111
    ARRAY     shift, and go to state 112
    ID        shift, and go to state 24

    ty      go to state 113
    typeid  go to state 114


state 95

    6 exp: typeid LBRACKET exp RBRACKET . OF exp

    OF  shift, and go to state 115


state 96

   32 typeid_fac: ID EQ . exp typeid_aux RBRACE

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 116
    lvalue  go to state 15
    typeid  go to state 17


state 97

   44 if_opc: ELSE . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 117
    lvalue  go to state 15
    typeid  go to state 17


state 98

   26 exp: IF exp THEN exp if_opc .

    $default  reduce using rule 26 (exp)


state 99

   28 exp: FOR ID ASSIGN exp TO . exp DO exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 118
    lvalue  go to state 15
    typeid  go to state 17


state 100

   51 exps_list: SEMICOLON . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 119
    lvalue  go to state 15
    typeid  go to state 17


state 101

   49 exps: exp exps_list .

    $default  reduce using rule 49 (exps)


state 102

   30 exp: LET decs IN exps END .

    $default  reduce using rule 30 (exp)


state 103

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   42 funcall_aux: COMMA exp . funcall_aux

    COMMA   shift, and go to state 86
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    COMMA     [reduce using rule 41 (funcall_aux)]
    PLUS      [reduce using rule 41 (funcall_aux)]
    MINUS     [reduce using rule 41 (funcall_aux)]
    TIMES     [reduce using rule 41 (funcall_aux)]
    DIVIDE    [reduce using rule 41 (funcall_aux)]
    LTE       [reduce using rule 41 (funcall_aux)]
    GTE       [reduce using rule 41 (funcall_aux)]
    EQ        [reduce using rule 41 (funcall_aux)]
    NEQ       [reduce using rule 41 (funcall_aux)]
    GT        [reduce using rule 41 (funcall_aux)]
    LT        [reduce using rule 41 (funcall_aux)]
    AND       [reduce using rule 41 (funcall_aux)]
    $default  reduce using rule 41 (funcall_aux)

    funcall_aux  go to state 120


state 104

   35 methodcall_fac: RPARENTHESIS .

    $default  reduce using rule 35 (methodcall_fac)


state 105

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   36 methodcall_fac: exp . methodcall_aux

    COMMA   shift, and go to state 121
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    COMMA     [reduce using rule 37 (methodcall_aux)]
    PLUS      [reduce using rule 37 (methodcall_aux)]
    MINUS     [reduce using rule 37 (methodcall_aux)]
    TIMES     [reduce using rule 37 (methodcall_aux)]
    DIVIDE    [reduce using rule 37 (methodcall_aux)]
    LTE       [reduce using rule 37 (methodcall_aux)]
    GTE       [reduce using rule 37 (methodcall_aux)]
    EQ        [reduce using rule 37 (methodcall_aux)]
    NEQ       [reduce using rule 37 (methodcall_aux)]
    GT        [reduce using rule 37 (methodcall_aux)]
    LT        [reduce using rule 37 (methodcall_aux)]
    AND       [reduce using rule 37 (methodcall_aux)]
    $default  reduce using rule 37 (methodcall_aux)

    methodcall_aux  go to state 122


state 106

   11 exp: lvalue DOT ID LPARENTHESIS methodcall_fac .

    $default  reduce using rule 11 (exp)


state 107

   68 tyfields: ID . COLON typeid tyfields_factor

    COLON  shift, and go to state 123


state 108

   56 dec: FUNCTION ID LPARENTHESIS tyfields . RPARENTHESIS dec_factor

    RPARENTHESIS  shift, and go to state 124


state 109

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   64 vardec_opc: ASSIGN exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 64 (vardec_opc)


state 110

   63 vardec_opc: COLON typeid . ASSIGN exp

    ASSIGN  shift, and go to state 125


state 111

   66 ty: LBRACKET . tyfields RBRACKET

    ID  shift, and go to state 107

    $default  reduce using rule 69 (tyfields)

    tyfields  go to state 126


state 112

   67 ty: ARRAY . OF typeid

    OF  shift, and go to state 127


state 113

   61 tydec: TYPE ID EQ ty .

    $default  reduce using rule 61 (tydec)


state 114

   65 ty: typeid .

    $default  reduce using rule 65 (ty)


state 115

    6 exp: typeid LBRACKET exp RBRACKET OF . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 128
    lvalue  go to state 15
    typeid  go to state 17


state 116

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   32 typeid_fac: ID EQ exp . typeid_aux RBRACE

    COMMA   shift, and go to state 129
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 33 (typeid_aux)

    typeid_aux  go to state 130


state 117

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   44 if_opc: ELSE exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 44 (if_opc)]
    MINUS     [reduce using rule 44 (if_opc)]
    TIMES     [reduce using rule 44 (if_opc)]
    DIVIDE    [reduce using rule 44 (if_opc)]
    LTE       [reduce using rule 44 (if_opc)]
    GTE       [reduce using rule 44 (if_opc)]
    EQ        [reduce using rule 44 (if_opc)]
    NEQ       [reduce using rule 44 (if_opc)]
    GT        [reduce using rule 44 (if_opc)]
    LT        [reduce using rule 44 (if_opc)]
    AND       [reduce using rule 44 (if_opc)]
    $default  reduce using rule 44 (if_opc)


state 118

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   28    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38
    DO      shift, and go to state 131


state 119

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   51 exps_list: SEMICOLON exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 51 (exps_list)


state 120

   42 funcall_aux: COMMA exp funcall_aux .

    $default  reduce using rule 42 (funcall_aux)


state 121

   38 methodcall_aux: COMMA . exp methodcall_aux

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 132
    lvalue  go to state 15
    typeid  go to state 17


state 122

   36 methodcall_fac: exp methodcall_aux .

    $default  reduce using rule 36 (methodcall_fac)


state 123

   68 tyfields: ID COLON . typeid tyfields_factor

    ID  shift, and go to state 24

    typeid  go to state 133


state 124

   56 dec: FUNCTION ID LPARENTHESIS tyfields RPARENTHESIS . dec_factor

    EQ     shift, and go to state 134
    COLON  shift, and go to state 135

    dec_factor  go to state 136


state 125

   63 vardec_opc: COLON typeid ASSIGN . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 137
    lvalue  go to state 15
    typeid  go to state 17


state 126

   66 ty: LBRACKET tyfields . RBRACKET

    RBRACKET  shift, and go to state 138


state 127

   67 ty: ARRAY OF . typeid

    ID  shift, and go to state 24

    typeid  go to state 139


state 128

    6 exp: typeid LBRACKET exp RBRACKET OF exp .
   13    | exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 6 (exp)]
    MINUS     [reduce using rule 6 (exp)]
    TIMES     [reduce using rule 6 (exp)]
    DIVIDE    [reduce using rule 6 (exp)]
    LTE       [reduce using rule 6 (exp)]
    GTE       [reduce using rule 6 (exp)]
    EQ        [reduce using rule 6 (exp)]
    NEQ       [reduce using rule 6 (exp)]
    GT        [reduce using rule 6 (exp)]
    LT        [reduce using rule 6 (exp)]
    AND       [reduce using rule 6 (exp)]
    $default  reduce using rule 6 (exp)


state 129

   34 typeid_aux: COMMA . ID EQ exp typeid_aux

    ID  shift, and go to state 140


state 130

   32 typeid_fac: ID EQ exp typeid_aux . RBRACE

    RBRACE  shift, and go to state 141


state 131

   28 exp: FOR ID ASSIGN exp TO exp DO . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 142
    lvalue  go to state 15
    typeid  go to state 17


state 132

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   38 methodcall_aux: COMMA exp . methodcall_aux

    COMMA   shift, and go to state 121
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    COMMA     [reduce using rule 37 (methodcall_aux)]
    PLUS      [reduce using rule 37 (methodcall_aux)]
    MINUS     [reduce using rule 37 (methodcall_aux)]
    TIMES     [reduce using rule 37 (methodcall_aux)]
    DIVIDE    [reduce using rule 37 (methodcall_aux)]
    LTE       [reduce using rule 37 (methodcall_aux)]
    GTE       [reduce using rule 37 (methodcall_aux)]
    EQ        [reduce using rule 37 (methodcall_aux)]
    NEQ       [reduce using rule 37 (methodcall_aux)]
    GT        [reduce using rule 37 (methodcall_aux)]
    LT        [reduce using rule 37 (methodcall_aux)]
    AND       [reduce using rule 37 (methodcall_aux)]
    $default  reduce using rule 37 (methodcall_aux)

    methodcall_aux  go to state 143


state 133

   68 tyfields: ID COLON typeid . tyfields_factor

    COMMA  shift, and go to state 144

    $default  reduce using rule 71 (tyfields_factor)

    tyfields_factor  go to state 145
    tyfields_aux     go to state 146


state 134

   58 dec_factor: EQ . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 147
    lvalue  go to state 15
    typeid  go to state 17


state 135

   57 dec_factor: COLON . typeid EQ exp

    ID  shift, and go to state 24

    typeid  go to state 148


state 136

   56 dec: FUNCTION ID LPARENTHESIS tyfields RPARENTHESIS dec_factor .

    $default  reduce using rule 56 (dec)


state 137

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   63 vardec_opc: COLON typeid ASSIGN exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 63 (vardec_opc)


state 138

   66 ty: LBRACKET tyfields RBRACKET .

    $default  reduce using rule 66 (ty)


state 139

   67 ty: ARRAY OF typeid .

    $default  reduce using rule 67 (ty)


state 140

   34 typeid_aux: COMMA ID . EQ exp typeid_aux

    EQ  shift, and go to state 149


state 141

   32 typeid_fac: ID EQ exp typeid_aux RBRACE .

    $default  reduce using rule 32 (typeid_fac)


state 142

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   28    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    LTE       [reduce using rule 28 (exp)]
    GTE       [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


state 143

   38 methodcall_aux: COMMA exp methodcall_aux .

    $default  reduce using rule 38 (methodcall_aux)


state 144

   72 tyfields_aux: COMMA . ID COLON typeid tyfields_aux_factor

    ID  shift, and go to state 150


state 145

   68 tyfields: ID COLON typeid tyfields_factor .

    $default  reduce using rule 68 (tyfields)


state 146

   70 tyfields_factor: tyfields_aux .

    $default  reduce using rule 70 (tyfields_factor)


state 147

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   58 dec_factor: EQ exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 58 (dec_factor)


state 148

   57 dec_factor: COLON typeid . EQ exp

    EQ  shift, and go to state 151


state 149

   34 typeid_aux: COMMA ID EQ . exp typeid_aux

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 152
    lvalue  go to state 15
    typeid  go to state 17


state 150

   72 tyfields_aux: COMMA ID . COLON typeid tyfields_aux_factor

    COLON  shift, and go to state 153


state 151

   57 dec_factor: COLON typeid EQ . exp

    LPARENTHESIS  shift, and go to state 1
    MINUS         shift, and go to state 2
    IF            shift, and go to state 3
    WHILE         shift, and go to state 4
    FOR           shift, and go to state 5
    LET           shift, and go to state 6
    BREAK         shift, and go to state 7
    NIL           shift, and go to state 8
    NEW           shift, and go to state 9
    ID            shift, and go to state 10
    INTEGER       shift, and go to state 11
    STRING        shift, and go to state 12

    exp     go to state 154
    lvalue  go to state 15
    typeid  go to state 17


state 152

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   34 typeid_aux: COMMA ID EQ exp . typeid_aux

    COMMA   shift, and go to state 129
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 33 (typeid_aux)

    typeid_aux  go to state 155


state 153

   72 tyfields_aux: COMMA ID COLON . typeid tyfields_aux_factor

    ID  shift, and go to state 24

    typeid  go to state 156


state 154

   13 exp: exp . AND exp
   14    | exp . LTE exp
   15    | exp . GTE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GT exp
   19    | exp . LT exp
   20    | exp . PLUS exp
   21    | exp . MINUS exp
   22    | exp . TIMES exp
   23    | exp . DIVIDE exp
   57 dec_factor: COLON typeid EQ exp .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    LTE     shift, and go to state 32
    GTE     shift, and go to state 33
    EQ      shift, and go to state 34
    NEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    AND     shift, and go to state 38

    $default  reduce using rule 57 (dec_factor)


state 155

   34 typeid_aux: COMMA ID EQ exp typeid_aux .

    $default  reduce using rule 34 (typeid_aux)


state 156

   72 tyfields_aux: COMMA ID COLON typeid . tyfields_aux_factor

    COMMA  shift, and go to state 144

    $default  reduce using rule 74 (tyfields_aux_factor)

    tyfields_aux         go to state 157
    tyfields_aux_factor  go to state 158


state 157

   73 tyfields_aux_factor: tyfields_aux .

    $default  reduce using rule 73 (tyfields_aux_factor)


state 158

   72 tyfields_aux: COMMA ID COLON typeid tyfields_aux_factor .

    $default  reduce using rule 72 (tyfields_aux)
